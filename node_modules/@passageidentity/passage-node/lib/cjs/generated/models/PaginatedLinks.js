"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaginatedLinksToJSON = exports.PaginatedLinksFromJSONTyped = exports.PaginatedLinksFromJSON = exports.instanceOfPaginatedLinks = void 0;
const Link_1 = require("./Link");
/**
 * Check if a given object implements the PaginatedLinks interface.
 */
function instanceOfPaginatedLinks(value) {
    let isInstance = true;
    isInstance = isInstance && "first" in value;
    isInstance = isInstance && "last" in value;
    isInstance = isInstance && "next" in value;
    isInstance = isInstance && "previous" in value;
    isInstance = isInstance && "self" in value;
    return isInstance;
}
exports.instanceOfPaginatedLinks = instanceOfPaginatedLinks;
function PaginatedLinksFromJSON(json) {
    return PaginatedLinksFromJSONTyped(json, false);
}
exports.PaginatedLinksFromJSON = PaginatedLinksFromJSON;
function PaginatedLinksFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'first': (0, Link_1.LinkFromJSON)(json['first']),
        'last': (0, Link_1.LinkFromJSON)(json['last']),
        'next': (0, Link_1.LinkFromJSON)(json['next']),
        'previous': (0, Link_1.LinkFromJSON)(json['previous']),
        'self': (0, Link_1.LinkFromJSON)(json['self']),
    };
}
exports.PaginatedLinksFromJSONTyped = PaginatedLinksFromJSONTyped;
function PaginatedLinksToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'first': (0, Link_1.LinkToJSON)(value.first),
        'last': (0, Link_1.LinkToJSON)(value.last),
        'next': (0, Link_1.LinkToJSON)(value.next),
        'previous': (0, Link_1.LinkToJSON)(value.previous),
        'self': (0, Link_1.LinkToJSON)(value.self),
    };
}
exports.PaginatedLinksToJSON = PaginatedLinksToJSON;
